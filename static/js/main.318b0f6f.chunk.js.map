{"version":3,"sources":["components/transactionHistory/TransactionHistory.module.css","components/App.module.css","components/balance/Balance.module.css","components/controls/Controls.jsx","components/balance/Balance.jsx","components/transactionHistory/TransactionHistory.jsx","components/App.jsx","index.jsx","components/controls/Controls.module.css"],"names":["module","exports","Controls","state","amount","notifyLittleMoney","toast","autoClose","position","notifyNegativeMoney","onChange","e","setState","target","value","parseFloat","onClick","balance","props","name","result","date","Date","toLocaleString","type","addOperation","this","className","styles","controls","input","step","btn","Component","fixAmount","toFixed","replace","Balance","changeBalance","deposits","Deposit","withdrawals","Withdrawal","depositsToFormat","withdrawalsToFormat","balanceToFormat","arrow_increase","String","fromCharCode","arrow_decrease","TransactionHistory","transactions","length","table","tableHead","tableTitle","map","item","key","id","data","reverse","Dashboard","transaction","handleClick","newOperation","uuid","v4","getValues","values","reduce","acc","res","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","dashboard","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.318b0f6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__2-7Pw\",\"tableHead\":\"TransactionHistory_tableHead__1R7en\",\"tableTitle\":\"TransactionHistory_tableTitle__1Ajd_\",\"data\":\"TransactionHistory_data__2xLZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"App_dashboard__1RHN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__3LWoq\",\"arrow_increase\":\"Balance_arrow_increase__18eyI\",\"arrow_decrease\":\"Balance_arrow_decrease__n4Z-3\",\"amount\":\"Balance_amount__LLX0W\"};","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  state = {\n    amount: '',\n  };\n\n  static propTypes = {\n    addOperation: PropTypes.func.isRequired,\n    balance: PropTypes.number.isRequired,\n  };\n\n  notifyLittleMoney = () => {\n    toast(\"Sorry, you don't have enough money on your account\", {\n      autoClose: 2000,\n      position: 'top-center',\n    });\n  };\n\n  notifyNegativeMoney = () => {\n    toast('The amount needs to be bigger than zero', {\n      autoClose: 2000,\n      position: 'top-center',\n    });\n  };\n\n  onChange = e => {\n    const amount = () =>\n      e.target.value === '' ? '' : parseFloat(e.target.value);\n    this.setState({ amount: amount() });\n  };\n\n  onClick = e => {\n    const { balance } = this.props;\n    const { amount } = this.state;\n    if (amount > 0) {\n      const withdrawal = () => (e.target.name === 'Withdrawal' ? amount : 0);\n      if (balance < withdrawal()) {\n        this.notifyLittleMoney();\n        this.setState({ amount: '' });\n        return;\n      }\n      const date = new Date();\n      const result = {\n        date: date.toLocaleString(),\n        amount,\n        type: e.target.name,\n      };\n      this.props.addOperation(result);\n      this.setState({ amount: '' });\n      // () => {\n      // };\n    } else {\n      this.notifyNegativeMoney();\n      this.setState({ amount: '' });\n    }\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          className={styles.input}\n          value={amount}\n          type=\"number\"\n          onChange={this.onChange}\n          step=\"0.01\"\n        />\n        <button\n          className={styles.btn}\n          name=\"Deposit\"\n          onClick={this.onClick}\n          type=\"button\"\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.btn}\n          name=\"Withdrawal\"\n          onClick={this.onClick}\n          type=\"button\"\n        >\n          Withdraw\n        </button>\n        <ToastContainer />\n      </section>\n    );\n  }\n}\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst fixAmount = amount =>\n  amount.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n\nconst Balance = ({ changeBalance }) => {\n  const deposits = changeBalance.Deposit;\n  const withdrawals = changeBalance.Withdrawal;\n  const { balance } = changeBalance;\n  const depositsToFormat = fixAmount(deposits);\n  const withdrawalsToFormat = fixAmount(withdrawals);\n  const balanceToFormat = fixAmount(balance);\n  return (\n    <section className={styles.balance}>\n      <span className={styles.arrow_increase}>\n        {String.fromCharCode(8593)}{' '}\n      </span>\n      <span className={styles.amount}>{depositsToFormat}$</span>\n      <span className={styles.arrow_decrease}>\n        {String.fromCharCode(8595)}{' '}\n      </span>\n      <span className={styles.amount}>{withdrawalsToFormat}$</span>\n      <span className={styles.amount}>Balance: {balanceToFormat}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  changeBalance: PropTypes.shape({\n    Deposit: PropTypes.number.isRequired,\n    Withdrawal: PropTypes.number.isRequired,\n    balance: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  const amountToFormat = amount =>\n    amount.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n  return (\n    transactions.length > 0 && (\n      <table className={styles.table}>\n        <thead className={styles.tableHead}>\n          <tr>\n            <th className={styles.tableTitle}>Transaction</th>\n            <th className={styles.tableTitle}>Amount</th>\n            <th className={styles.tableTitle}>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions\n            .map(item => (\n              <tr key={item.id}>\n                <td className={styles.data}>{item.type}</td>\n                <td className={styles.data}>{amountToFormat(item.amount)}$</td>\n                <td className={styles.data}>{item.date}</td>\n              </tr>\n            ))\n            .reverse()}\n        </tbody>\n      </table>\n    )\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport Controls from './controls/Controls';\nimport Balance from './balance/Balance';\nimport TransactionHistory from './transactionHistory/TransactionHistory';\nimport styles from './App.module.css';\n\nclass Dashboard extends Component {\n  state = {\n    transaction: [],\n  };\n\n  handleClick = amount => {\n    const newOperation = { ...amount, id: uuid.v4() };\n    this.setState(state => ({\n      transaction: [...state.transaction, newOperation],\n    }));\n  };\n\n  componentDidMount() {\n    const res = localStorage.getItem('transactions');\n    if (res) {\n      this.setState({ transaction: JSON.parse(res) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.transaction !== prevState.transaction) {\n      localStorage.setItem(\n        'transactions',\n        JSON.stringify(this.state.transaction),\n      );\n    }\n  }\n\n  getValues = transaction => {\n    const values = transaction.reduce(\n      (acc, item) =>\n        acc[item.type]\n          ? { ...acc, [item.type]: (acc[item.type] += item.amount) }\n          : { ...acc, [item.type]: item.amount },\n      { Deposit: 0, Withdrawal: 0 },\n    );\n    values.balance = values.Deposit - values.Withdrawal;\n    return values;\n  };\n\n  render() {\n    const { transaction } = this.state;\n    const balance = this.getValues(transaction);\n    return (\n      <div className={styles.dashboard}>\n        <Controls addOperation={this.handleClick} balance={balance.balance} />\n        <Balance changeBalance={balance} />\n        <TransactionHistory transactions={transaction} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__oYNIz\",\"input\":\"Controls_input__1i6lM\",\"btn\":\"Controls_btn__3S-5o Controls_input__1i6lM\"};"],"sourceRoot":""}